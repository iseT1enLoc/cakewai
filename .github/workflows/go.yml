name: Build and Deploy Cakewai Go App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t iset1enloc/cakewaibackend:latest .

    - name: Push Docker image
      run: docker push iset1enloc/cakewaibackend:latest

    # - name: Deploy to DigitalOcean Droplet
    #   uses: appleboy/ssh-action@v0.1.10
    #   with:
    #     host: ${{ secrets.DO_HOST }}
    #     username: ${{ secrets.DO_USER }}
    #     key: ${{ secrets.DO_SSH_KEY }}
    #     script: |
    #       docker pull iset1enloc/cakewaibackend:latest
    #       docker stop cakewai92 || true
    #       docker rm cakewai92 || true
    #       docker run -d \
    #         --name cakewai92 \
    #         -p 8080:8080 \
    #         -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
    #         -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
    #         -e REFRESH_SECRET="${{ secrets.REFRESH_SECRET }}" \
    #         -e ACCESS_SECRET="${{ secrets.ACCESS_SECRET }}" \
    #         -e ACCESS_TOK_EXP="${{ secrets.ACCESS_TOK_EXP }}" \
    #         -e REFRESH_TOK_EXP="${{ secrets.REFRESH_TOK_EXP }}" \
    #         -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
    #         -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRE }}" \
    #         -e CLOUD_NAME="${{ secrets.CLOUD_NAME }}" \
    #         -e CLOUD_API_KEY="${{ secrets.CLOUD_API_KEY }}" \
    #         -e CLOUD_API_SECRET="${{ secrets.CLOUD_API_SECRET }}" \
    #         -e EMAIL_API="${{ secrets.EMAIL_API }}" \
    #         -e SENDER="${{ secrets.SENDER }}" \
    #         -e TIMEOUT="${{ secrets.TIMEOUT }}" \
    #         -e FRONT_END="${{ secrets.FRONT_END }}" \
    #         iset1enloc/cakewaibackend:latest
    - name: Validate SSH key format
      run: |
        echo "${{ secrets.DIGI_SSH }}" > test_key
        chmod 600 test_key
        ssh-keygen -l -f test_key || echo "‚ùå Invalid SSH private key"

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USER }}
        key: ${{ secrets.DIGI_SSH }}
        script: |
          echo "‚úÖ Logged in as: $(whoami)"
          echo "üìç Host IP: $(hostname -I)"
          echo "üê≥ Checking Docker version..."
          docker --version || { echo "‚ùå Docker not installed!"; exit 1; }
    
          echo "üîç Current running containers:"
          docker ps -a || echo "No containers running."
    
          echo "‚¨áÔ∏è Pulling latest Docker image..."
          docker pull iset1enloc/cakewaibackend:latest || { echo "‚ùå Failed to pull image"; exit 1; }
    
          echo "üõë Stopping existing container if running..."
          docker stop cakewai92 || echo "‚ö†Ô∏è No running container to stop"
    
          echo "üßπ Removing old container..."
          docker rm cakewai92 || echo "‚ö†Ô∏è No old container to remove"
    
          echo "üöÄ Starting new container..."
          docker run -d \
            --name cakewai92 \
            -p 8080:8080 \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e REFRESH_SECRET="${{ secrets.REFRESH_SECRET }}" \
            -e ACCESS_SECRET="${{ secrets.ACCESS_SECRET }}" \
            -e ACCESS_TOK_EXP="${{ secrets.ACCESS_TOK_EXP }}" \
            -e REFRESH_TOK_EXP="${{ secrets.REFRESH_TOK_EXP }}" \
            -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
            -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            -e CLOUD_NAME="${{ secrets.CLOUD_NAME }}" \
            -e CLOUD_API_KEY="${{ secrets.CLOUD_API_KEY }}" \
            -e CLOUD_API_SECRET="${{ secrets.CLOUD_API_SECRET }}" \
            -e EMAIL_API="${{ secrets.EMAIL_API }}" \
            -e SENDER="${{ secrets.SENDER }}" \
            -e TIMEOUT="${{ secrets.TIMEOUT }}" \
            -e FRONT_END="${{ secrets.FRONT_END }}" \
            iset1enloc/cakewaibackend:latest || { echo "‚ùå Failed to start container"; exit 1; }
    
          echo "üì¶ Verifying container status..."
          docker ps | grep cakewai92 || echo "‚ùå Container is not running"
    
          echo "üìù Last 20 lines of container logs:"
          docker logs --tail 20 cakewai92 || echo "‚ö†Ô∏è Could not read container logs"
    
          echo "‚úÖ Deployment finished."

