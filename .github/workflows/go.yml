name: Build and Deploy Cakewai Go App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: 🔨 Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Docker login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: 🏗️ Build Docker image
      run: docker build -t iset1enloc/cakewaibackend:latest .

  push:
    name: 📦 Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Docker login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: 🏷️ Push Docker image
      run: docker push iset1enloc/cakewaibackend:latest

  deploy:
    name: 🚀 Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: push

    steps:
    - name: 🔐 SSH and Deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DO_USER }}
        key: ${{ secrets.DIGI_SSH }}
        port: 22
        script: |
          echo "✅ Logged in as $(whoami)"
          echo "📦 Pulling latest Docker image..."
          docker pull iset1enloc/cakewaibackend:latest

          echo "🛑 Stopping previous container if exists..."
          docker stop cakewai92 || true

          echo "🧹 Removing previous container if exists..."
          docker rm cakewai92 || true

          echo "🚀 Running updated container..."
          docker run -d \
            --name cakewai92 \
            --restart unless-stopped \
            -p 8080:8080 \
            -e DATABASE_URL='${{ secrets.DATABASE_URL }}' \
            -e SECRET_KEY='${{ secrets.SECRET_KEY }}' \
            -e REFRESH_SECRET='${{ secrets.REFRESH_SECRET }}' \
            -e ACCESS_SECRET='${{ secrets.ACCESS_SECRET }}' \
            -e ACCESS_TOK_EXP='${{ secrets.ACCESS_TOK_EXP }}' \
            -e REFRESH_TOK_EXP='${{ secrets.REFRESH_TOK_EXP }}' \
            -e GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}' \
            -e GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            -e CLOUD_NAME='${{ secrets.CLOUD_NAME }}' \
            -e CLOUD_API_KEY='${{ secrets.CLOUD_API_KEY }}' \
            -e CLOUD_API_SECRET='${{ secrets.CLOUD_API_SECRET }}' \
            -e EMAIL_API='${{ secrets.EMAIL_API }}' \
            -e SENDER='${{ secrets.SENDER }}' \
            -e TIMEOUT='${{ secrets.TIMEOUT }}' \
            -e FRONT_END='${{ secrets.FRONT_END }}' \
            iset1enloc/cakewaibackend:latest

          echo "✅ Cakewai backend deployed successfully!"
